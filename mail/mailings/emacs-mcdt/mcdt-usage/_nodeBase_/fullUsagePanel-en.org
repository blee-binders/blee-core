* B|
####+BEGIN: bxPanel:common/title-plus
#+title: emacs-mcdt/mcdt-usage
#+roam_tags: branch
#+roam_key: mailings/emacs-mcdt/mcdt-usage
[[file:../../_nodeBase_/fullUsagePanel-en.org][mailings/emacs-mcdt]]
####+END
####+BEGIN: blee:bxPanel:topPanelControls
*  [[elisp:(org-cycle)][|#Control|]] :: [[elisp:(blee:bnsm:menu-back)][Back]] [[elisp:(toggle-read-only)][read/wr]] | [[elisp:(show-all)][Show-All]]  [[elisp:(org-shifttab)][Overview]]  [[elisp:(progn (org-shifttab) (org-content))][Content]] | [[elisp:(delete-other-windows)][(1)]] | [[elisp:(progn (save-buffer) (kill-buffer))][S&Q]] [[elisp:(save-buffer)][Save]] [[elisp:(kill-buffer)][Quit]] [[elisp:(bury-buffer)][Bury]]  [[elisp:(magit)][Magit]]  [[elisp:(org-cycle)][| ]]
**  [[elisp:(blee:buf:re-major-mode)][Re-Major-Mode]] ||  [[elisp:(org-dblock-update-buffer-bx)][Update Buf Dblocks]] || [[elisp:(org-dblock-bx-blank-buffer)][Blank Buf Dblocks]] || [[elisp:(bx:panel:variablesShow)][bx:panel:variablesShow]]
**  [[elisp:(blee:menu-sel:comeega:maintenance:popupMenu)][||Maintenance]] 
**  This File :: *= /bisos/panels/blee-core/mail/mailings/emacs-mcdt/mcdt-usage/_nodeBase_/fullUsagePanel-en.org =* 
*  [[elisp:(org-cycle)][|#Select|]]  :: (Results: [[elisp:(blee:bnsm:results-here)][Here]] | [[elisp:(blee:bnsm:results-split-below)][Below]] | [[elisp:(blee:bnsm:results-split-right)][Right]] | [[elisp:(blee:bnsm:results-other)][Other]] | [[elisp:(blee:bnsm:results-popup)][Popup]]) (Select:  [[elisp:(lsip-local-run-command "lpCurrentsAdmin.sh -i currentsGetThenShow")][Show Currents]]  [[elisp:(lsip-local-run-command "lpCurrentsAdmin.sh")][lpCurrentsAdmin.sh]] ) [[elisp:(org-cycle)][| ]]
**  #See:  (Window: [[elisp:(blee:bnsm:results-window-show)][?]] | [[elisp:(blee:bnsm:results-window-set 0)][0]] | [[elisp:(blee:bnsm:results-window-set 1)][1]] | [[elisp:(blee:bnsm:results-window-set 2)][2]] | [[elisp:(blee:bnsm:results-window-set 3)][3]] ) || [[elisp:(lsip-local-run-command-here "echo pushd dest")][echo pushd dir]] || [[elisp:(lsip-local-run-command-here "lsf")][lsf]] || [[elisp:(lsip-local-run-command-here "pwd")][pwd]] |
**  [[elisp:(org-cycle)][|#Destinations|]] :: [[Evolution]] | [[Maintainers]]  [[elisp:(org-cycle)][| ]]
**  #See:  [[elisp:(bx:bnsm:top:panel-blee)][Blee]] | [[elisp:(bx:bnsm:top:panel-listOfDocs)][All Docs]]  E|
####+END
####+BEGIN: blee:bxPanel:title :panelType "=bxPanel=" :title "auto"
* [[elisp:(show-all)][(>]] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 
*   [[img-link:file:/bisos/blee/env/images/fpfByStarElipseTop-50.png][http://www.freeprotocols.org]]_ _   ~Node:: mailings/emacs-mcdt -- mcdt-usage~   [[img-link:file:/bisos/blee/env/images/fpfByStarElipseBottom-50.png][http://www.by-star.net]]
* ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━  [[elisp:(org-shifttab)][<)]] E|
####+END:
####+BEGIN: blee:bxPanel:terseTreeNavigator :panelsList "bxPanel"
* [[elisp:(show-all)][(>]] [[elisp:(describe-function 'org-dblock-write:blee:bxPanel:terseTreeNavigator)][dbf]]
* [[elisp:(show-all)][|n]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_   General Panels ::   [[img-link:file:/bisos/blee/env/images/bystarInside.jpg][http://www.by-star.net]] *|*  [[elisp:(find-file "/libre/ByStar/InitialTemplates/activeDocs/listOfDocs/fullUsagePanel-en.org")][BxDE Top Panel]] *|* [[elisp:(blee:bnsm:panel-goto "/libre/ByStar/InitialTemplates/activeDocs/planning/Main")][ByStar Planning]]

*   *Siblings*   :: [[elisp:(blee:bnsm:panel-goto "/bisos/panels/blee-core/mail/mailings/emacs-mcdt/mcdt-conceptAndDesign/_nodeBase_")][ =mcdt-conceptAndDesign= ]] *|* [[elisp:(blee:bnsm:panel-goto "/bisos/panels/blee-core/mail/mailings/emacs-mcdt/mcdt-usage/_nodeBase_")][ =mcdt-usage= ]] *|* 
*   /Ancestors/  :: [[elisp:(blee:bnsm:panel-goto "/bisos/panels/blee-core/mail/mailings/emacs-mcdt/_nodeBase_")][ =emacs-mcdt= ]] *|* [[elisp:(blee:bnsm:panel-goto "/bisos/panels/blee-core/mail/mailings/_nodeBase_")][ =mailings= ]] *|* 
*                                   _━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━_                          [[elisp:(org-shifttab)][<)]] E|
####+END
####+BEGIN: blee:bxPanel:foldingSection :outLevel 1 :title "Overview" :anchor "Panel"
* [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_       [[elisp:(org-cycle)][| *Overview:* |]] <<Panel>>   [[elisp:(org-shifttab)][<)]] E|
####+END
** 
** Overview Comes Here.
** B|
####+BEGIN: blee:bxPanel:foldingSection :outLevel 1 :sep t :title "ICMs and Bases" :anchor "" :extraInfo ""
* /[[elisp:(beginning-of-buffer)][|^]]  [[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]] [[elisp:(delete-other-windows)][|1]]/ 
* [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_       [[elisp:(org-cycle)][| *ICMs and Bases:* |]]    [[elisp:(org-shifttab)][<)]] E|
####+END
####+BEGIN: blee:panel:icm:bash:intro :outLevel 2 :sep nil :folding? t :label "Sh-ICM" :icmName "bueMailingSetup.sh" :comment "Create base mailings directory" :afterComment "and files"
** [[elisp:(show-all)][(>]] [[elisp:(blee:menu-sel:outline:popupMenu)][+-]] [[elisp:(blee:menu-sel:navigation:popupMenu)][==]]  [[elisp:(org-cycle)][| /Sh-ICM/ |]] :: [[elisp:(lsip-local-run-command "bueMailingSetup.sh -i examples")][bueMailingSetup.sh]]  [[elisp:(lsip-local-run-command "bueMailingSetup.sh -i visit")][visit]]  [[elisp:(lsip-local-run-command "bueMailingSetup.sh -i describe")][describe]] *|*  =Create base mailings directory= *|*  and files [[elisp:(org-shifttab)][<)]] E|
####+END:
####+BEGIN: blee:panel:icm:bash:intro :outLevel 2 :sep nil :folding? t :label "Sh-ICM" :icmName "seedNameDistProc.sh" :comment "~/BUE/names" :afterComment ""
** [[elisp:(show-all)][(>]] [[elisp:(blee:menu-sel:outline:popupMenu)][+-]] [[elisp:(blee:menu-sel:navigation:popupMenu)][==]]  [[elisp:(org-cycle)][| /Sh-ICM/ |]] :: [[elisp:(lsip-local-run-command "seedNameDistProc.sh -i examples")][seedNameDistProc.sh]]  [[elisp:(lsip-local-run-command "seedNameDistProc.sh -i visit")][visit]]  [[elisp:(lsip-local-run-command "seedNameDistProc.sh -i describe")][describe]] *|*  =~/BUE/names= *|*   [[elisp:(org-shifttab)][<)]] E|
####+END:
####+BEGIN: blee:panel:icm:bash:intro :outLevel 2 :sep nil :folding? t :label "Sh-ICM" :icmName "seedMailingProc.sh" :comment "~/BUE/mailings" :afterComment ""
** [[elisp:(show-all)][(>]] [[elisp:(blee:menu-sel:outline:popupMenu)][+-]] [[elisp:(blee:menu-sel:navigation:popupMenu)][==]]  [[elisp:(org-cycle)][| /Sh-ICM/ |]] :: [[elisp:(lsip-local-run-command "seedMailingProc.sh -i examples")][seedMailingProc.sh]]  [[elisp:(lsip-local-run-command "seedMailingProc.sh -i visit")][visit]]  [[elisp:(lsip-local-run-command "seedMailingProc.sh -i describe")][describe]] *|*  =~/BUE/mailings= *|*   [[elisp:(org-shifttab)][<)]] E|
####+END:
####+BEGIN: blee:bxPanel:foldingSection :outLevel 1 :sep t :title "Mailings Delivery Care/Hints/Policy/Procedure" :anchor "" :extraInfo "Increasing Inbox Delivery Rate"
* /[[elisp:(beginning-of-buffer)][|^]]  [[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]] [[elisp:(delete-other-windows)][|1]]/ 
* [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_       [[elisp:(org-cycle)][| *Mailings Delivery Care/Hints/Policy/Procedure:* |]]  Increasing Inbox Delivery Rate  [[elisp:(org-shifttab)][<)]] E|
####+END
** 
**             https://support.google.com/mail/answer/81126?hl=en
** 
####+BEGIN: blee:bxPanel:foldingSection :outLevel 1 :sep t :title "BUE Names-Mailings-Distributions Model" :anchor "" :extraInfo "Description and Usage"
* /[[elisp:(beginning-of-buffer)][|^]]  [[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]] [[elisp:(delete-other-windows)][|1]]/ 
* [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_       [[elisp:(org-cycle)][| *BUE Names-Mailings-Distributions Model:* |]]  Description and Usage  [[elisp:(org-shifttab)][<)]] E|
####+END
**  [[elisp:(org-cycle)][| ]]  /Overview/   ::    [[elisp:(org-cycle)][| ]]
***    ========  /Key Pure Mailing Objects/
       Names are independent of Mailings -- Distributions, combine Mailings and Names
****   ==== /Names/         --  nameProc.sh    -- seedNameDistProc.sh  -- ~/BUE/names 
****   ==== /Mailings/      --  mailingProc.sh -- seedMailingProc.sh   -- ~/BUE/mailings 
****   ==== /Distributions/ --  distProc.sh    -- seedNameDistProc.sh  -- ~/BUE/mailings/some/dist  
       Names are independent of Mailings -- Distributions, combine Mailings and Names
****   ==== /Names/         --  nameProc.sh    -- seedNameDistProc.sh  -- ~/BUE/names 
****   ==== /Mailings/      --  mailingProc.sh -- seedMailingProc.sh   -- ~/BUE/mailings 
****   ==== /Distributions/ --  distProc.sh    -- seedNameDistProc.sh  -- ~/BUE/mailings/some/dist  
***    ========  /Key Lcnt Mailing Objects/
****   ==== /Publishable Lcnt/      --  lcnLcntGens.sh -p form=mailLcnt             -- lcntProc.sh  -- /lcnt/../docName
****   ==== /Private Lcnt/          --  lcnLcntGens.sh -p form=mailLcnt -p nu=000   -- lcntProc.sh  -- /lcnt/../docName
****   ==== /Mailings + Pub Lcnt/   --  bxtStartMailing.sh  -i startObjectGen htmlPubLcnt path -- /lcnt/../docName/mailing
****   ==== /Mailings + Priv Lcnt/  --  bxtStartMailing.sh  -i startObjectGen lcntHtml path -- /lcnt/../docName/mailing
****   ==============
****   ==== /DistBases/  --         mkdir -p .../dist --  /lcnt/../docName/mailing/dist
****   ==== /DistBase/  --          bxtStartDistMail.sh -v -n showRun -i startObjectGen nativeNode .
****   ==== /DistBase + Names/  --  mkdir -p .../names --  /lcnt/../docName/mailing/dist/names
****   ==== /DistBase + Names/  --  bxtStartDistMail.sh -v -n showRun -i startObjectGen namesList .
****   ==== /DistBase + DIST/  --   mkdir -p .../distName --  /lcnt/../docName/mailing/dist/distName
****   ==== /DistBase + DIST/  --   bxtStartDistMail.sh -v -n showRun -i startObjectGen distribution .
***    ========  /Key ~/BUE Mailing Objects/
****   ==== /Names/         --  nameProc.sh    -- seedNameDistProc.sh  -- ~/BUE/names 
****   ==== /Distributions/ --  distProc.sh    -- seedNameDistProc.sh  -- ~/BUE/mailings/some/dist  
***    ========  /Names/
**** ~basa/names   --- Will Have names Hierarchy with  "nameProc.sh" Based on seedNameDistProc.sh
**** ~basa/names/central  central/templates/nameProc.sh
****  /hss/vc/bbdbNames/central  /hss/vc/bbdbMailings/central

***    ========  /Mailings/
****   ~basa/mailings
****   ~basa/mailings/part/chapter/section
****    bystarMailingStart.sh  -- Pattern after seedPlone3NewProc.sh -- bystarPlone3Start.sh
****    objectType=text - html - lcntHtml
****    Each Mailing is named in mailingName -- Typically part-chapter-section
****    mailing.el  is generated with part-chapter-section
****    mailing.el  is optionally loaded
****    msend-part-chapter-section is entry point
****    ~basa/mailings/bystar/announce/digitalEcosystem/dists/tag1 -- Each Dist Will have "distProc.sh" Based on seedNameDistProc.sh
****    A distProc.sh is associated with a mailing through hierarch or otherwise and 
****    ~basa/mailings/bystar/announce/digitalEcosystem/curDist  -- Current Distribution
****    ~basa/mailings/logs
***    ========  /Mailings - Transition/
****    Take /usr/devenv/bbdbNames/bin/bbdbMailings.sh -- Absorb It into seedMailingProc.sh
****    Current Transitional Example: /usr/devenv/bbdbNames/MailingsKeep/iran/bystar/audienceRequestIran/dists/2012-1/bbdbNamesProc.sh
***    ======== /Distributions/
****    Distributions are based in mailing/dist eg: ~basa/mailings/part/chapter/section/dist
####+BEGIN: blee:bxPanel:foldingSection :outLevel 1 :sep t :title "Mailing Invokation" :anchor "" :extraInfo "From browser, bbdb, any, and message With Args"
* /[[elisp:(beginning-of-buffer)][|^]]  [[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]] [[elisp:(delete-other-windows)][|1]]/ 
* [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_       [[elisp:(org-cycle)][| *Mailing Invokation:* |]]  From browser, bbdb, any, and message With Args  [[elisp:(org-shifttab)][<)]] E|
####+END
**     ============ Invocation Facilities Overview
***    ========    /From Anywhere/
***    ======== bxms-compose-MailingName       -- ANYWHERE -- Originate A Fresh Message -- Or Augment An Existing Message
***    ========    /From Message Mode/
***    ======== bxms-compose-MailingName       -- MAIL BUFFER  -- (1) Append  (2) Replace Body  (4) Replace Subject+Body
****   ====    meta x: bxms-compose-MailingName         -- (1) append subject -- append body -- append from, envelope -- append cc, bcc
****   ====    ctl u meta x: bxms-compose-MailingName   -- (4) clear+append subject -- clear+append body  -- Used For Second Level Start Selections
****   ====    ctl u 2 meta x: bxms-compose-MailingName -- (2) append subject -- clear+append body  -- Used with bxms-web-xxx
***    ======== bxms-batch-MailingName         -- = bx-msend-MailingName + (msend-mail-and-exit)
***    ========    /From The Browser/
***    ======== bxms-web-url-MailingName       -- BROWSER ORIGINATION -- (Send Link)
***    ======== bxms-web-mailto-MailingName    -- BROWSER ORIGINATION -- (Click On a mailto: URL)
***    ========    /From BBDB Mode/
***    ======== x bxms-compose-MailingName     -- BBDB ORIGINATION  -- Interactive on One
***    ======== * x bxms-compose-MailingName   -- BBDB ORIGINATION  -- Interactive on Each one-by-one
***    ======== x bxms-batch-MailingName       -- BBDB ORIGINATION  -- Batch on One
***    ======== * x bxms-batch-MailingName     -- BBDB ORIGINATION  -- Batch on Each one-by-one
***    ======== x bxms-toall-MailingName       -- BBDB ORIGINATION  -- Interactive on ALL
***    ========    /With Selected BBDB/
***    ======== bxms-bbdb-compose-MailingName  -- BBDB USAGE        -- (1) Interactive on One -- (4) Interactive on Each one-by-one
***    ======== bxms-bbdb-batch-MailingName    -- BBDB USAGE        -- (1) Batch on One -- (4) Batch on Each one-by-one
***    ======== bxms-bbdb-toall-MailingName    -- BBDB USAGE        -- Interactive on ALL in To:
####+BEGIN: blee:bxPanel:foldingSection :outLevel 1 :sep t :title "Names Activities" :anchor "" :extraInfo "(How To)"
* /[[elisp:(beginning-of-buffer)][|^]]  [[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]] [[elisp:(delete-other-windows)][|1]]/ 
* [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_       [[elisp:(org-cycle)][| *Names Activities:* |]]  (How To)  [[elisp:(org-shifttab)][<)]] E|
####+END
**     ============
** How do I create a new Names List?

***    1) Choose (and Create) the right Base Directory For The Mailing
       mkdir -p ~/BUE/names/examplesAndTests/

***    2) Go To That Base 
       [[elisp:(lsip-local-run-command "echo pushd ~/BUE/names/SPECIFY")][echo pushd ~/BUE/namess/SPECIFY]]
       
***    3) Run bystarNameStart.sh and Choose What Type Of Content You Want
****      bystarMailingStart.sh -i startObjectGen namesList path

***    4) Edit nameProc.sh and add  names list generators
****      bystarMailingStart.sh -i startObjectGen namesList path
****      distIncludeFileName ~/BUE/names/examplesAndTests/examples.names
****      distIncludeFileName ~/BUE/names/examplesAndTests/xxx.names
****      listNamesGlobalExcludes

***    5) Run namesOutputListWith vis_examplesAndTests

***    6) Run namesOutputToFilesWith
****       $1=includeExcludeTag, $2+=listFunc
****       Based on listFunc, create tag-include.names and tag-exclude.names

***    7) ${G_myName} ${extraInfo} -i namesResultFor tag1                           # After namesOutputToFilesWith tag1 vis_examplesAndTests

***    8) ${G_myName} ${extraInfo} -i namesOutputToFilesWithAndResult tag1 vis_examplesAndTests  # namesOutputToFilesWith + namesResultFor

***    9) Clean Up The NamesList

***    10) Subject The NamesList To Version Control
       [[elisp:(lsip-local-run-command "echo cvs update")][echo cvs update]]                 # Current Setting

** NamesList Processing -- nameProc.sh (based on seedNameDistProc.sh) Facilities

***  nameProc.sh -i namesOutputListWith vis_func
****  $1+=listFunc 
****  Based on listFunc, list out files to be included or excluded.

***  nameProc.sh -i namesOutputToFilesWith
****  $1=tag (includeExcludeTag), $2+=listFunc
****  Based on listFunc, create tag-include.names and tag-exclude.names

***  nameProc.sh -i namesResultFor
****  $1=tag (includeExcludeTag)
****  Assumes vis_namesOutputToFilesWith has run before and 
****  includeExcludeTag="$1" -- ${includeExcludeTag}-include.names ${includeExcludeTag}-exclude.names
****  are in place.
****  Combines those to produce ${includeExcludeTag}-result.names
****  If $1=dist, then dist-sentLog.names is assumed to be in place and is used as an exclude.

***  nameProc.sh -i namesOutputToFilesWithAndResult
****  $1=tag (includeExcludeTag), $2+=listFunc
****  namesOutputToFilesWith + namesResultFor
####+BEGIN: blee:bxPanel:foldingSection :outLevel 1 :sep t :title "Mailings Activities And Log Of Mailings" :anchor "" :extraInfo "(How To)"
* /[[elisp:(beginning-of-buffer)][|^]]  [[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]] [[elisp:(delete-other-windows)][|1]]/ 
* [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_       [[elisp:(org-cycle)][| *Mailings Activities And Log Of Mailings:* |]]  (How To)  [[elisp:(org-shifttab)][<)]] E|
####+END
**     ============
**  [[elisp:(org-cycle)][| ]]  New Mailing  ::  How do I create a new Mailing?   [[elisp:(org-cycle)][| ]]
***   [[elisp:(org-cycle)][| ]]   1) Choose (and Create) the right Base Directory For The Mailing   [[elisp:(org-cycle)][| ]]
       mkdir -p ~/BUE/mailings/mohsenPersonal/greetings/someEvent

***   [[elisp:(org-cycle)][| ]]   2) Go To That Base 
       [[elisp:(lsip-local-run-command "echo pushd ~/BUE/mailings/SPECIFY")][echo pushd ~/BUE/mailings/SPECIFY]]

***   [[elisp:(org-cycle)][| ]]   3) Run bystarMailingStart.sh and Choose What Type Of Content You Want
****      bxtStartMailing.sh -v -n showRun -i startObjectGen text path 
****      bxtStartMailing.sh -i startObjectGen htmlLcnt path      -- .../mailing/lcnt
****      bxtStartMailing.sh -i startObjectGen lcntHtml path      -- .../mailing/lcnt
****      bxtStartMailing.sh -i startObjectGen htmlPubLcnt path
***   [[elisp:(org-cycle)][| ]]   4) Fill-in The fileVariables
       [[elisp:(lsip-local-run-command "mailingProc.sh -i configParams")][mailingProc.sh -i configParams]]   # Does Not Work 

***   [[elisp:(org-cycle)][| ]]   5) Edit content.mail   [[elisp:(lsip-local-run-command "echo ./content.mail")][echo ./content.mail]]
***   [[elisp:(org-cycle)][| ]]   6) Run objectUpdate Create mailBody.html By running 
       [[elisp:(lsip-local-run-command "mailingProc.sh -i objectUpdate")][mailingProc.sh -i objectUpdate]]

***   [[elisp:(org-cycle)][| ]]   7) Test Out The Distribution

***   [[elisp:(org-cycle)][| ]]   8) Decide if this is to be Auto Loadable
       [[elisp:(lsip-local-run-command "cat excludeFromAutoload")][cat excludeFromAutoload]]                  # Current Setting
       [[elisp:(lsip-local-run-command "echo false  > excludeFromAutoload")][echo false  > excludeFromAutoload]]        # DO Autoload
       [[elisp:(lsip-local-run-command "echo true  > excludeFromAutoload")][echo true  > excludeFromAutoload]]         # DO NOT Autoload

***   [[elisp:(org-cycle)][| ]]   9) Clean Up The Mailing

***   [[elisp:(org-cycle)][| ]]  10) Subject The Mailing To Version Control
       [[elisp:(lsip-local-run-command "echo cvs update")][echo cvs update]]                 # Current Setting

**  [[elisp:(org-cycle)][| ]]  Mailing Logs ::  Where Are The Mailing Logs And How Do I Process Them?  [[elisp:(org-cycle)][| ]]
***    1) Mailing Logs are at:  [[file:~/BUE/mailings/logs/mailings.sent]]

***    2) You Process Mailing Logs with  [[file:~/BUE/mailings/logs/fileProc.sh]]
****       [[elisp:(lsip-local-run-command "pushd ~/BUE/mailings/logs")][pushd ~/BUE/mailings/logs]]
####+BEGIN: blee:bxPanel:foldingSection :outLevel 1 :sep t :title "Distributions Activities" :anchor "" :extraInfo "(How To)"
* /[[elisp:(beginning-of-buffer)][|^]]  [[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]] [[elisp:(delete-other-windows)][|1]]/ 
* [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_       [[elisp:(org-cycle)][| *Distributions Activities:* |]]  (How To)  [[elisp:(org-shifttab)][<)]] E|
####+END
**     ============
** How  do ditributions work? -- Overview Of Distributions

***  Each Distribution Sits On Top Of A Mailing
**** Mailing: /acct/employee/lsipusr/BUE/mailings/mohsenPersonal/invitations/2013/0809-reunion
**** Distribution: /acct/employee/lsipusr/BUE/mailings/mohsenPersonal/invitations/2013/0809-reunion/dists/20130806

***  Distribution Processors Are Based On NamesProcessors -- /opt/public/osmt/bin/seedNameDistProc.sh

***  Distributions Use NameOfTheMailing to Track Logs

** Distributions Processing -- distProc.sh (based on seedNameDistProc.sh) Facilities

***  distProc.sh -i mailingNameGet
****  $#=0 
****  Based on file hierarchy decide what mailing is this distribution for.

***  distProc.sh -i namesOutputListWith vis_func
****  $1+=listFunc 
****  Based on listFunc, list out files to be included or excluded.

***  distProc.sh -i namesOutputToFilesWith
****  $1=tag (includeExcludeTag), $2+=listFunc
****  Based on listFunc, create tag-include.names and tag-exclude.names

***  distProc.sh -i namesResultFor
****  $1=tag (includeExcludeTag)
****  Assumes vis_namesOutputToFilesWith has run before and 
****  includeExcludeTag="$1" -- ${includeExcludeTag}-include.names ${includeExcludeTag}-exclude.names
****  are in place.
****  Combines those to produce ${includeExcludeTag}-result.names
****  If $1=dist, then dist-sentLog.names is assumed to be in place and is used as an exclude.

***  distProc.sh -i namesOutputToFilesWithAndResult
****  $1=tag (includeExcludeTag), $2+=listFunc
****  namesOutputToFilesWith + namesResultFor


***  --- DISTRIBUTIONS PROCESSING ---
${G_myName} ${extraInfo} -i distNamesOutputWith vis_examplesAndTests  # = namesOutputToFilesWith dist vis_examplesAndTests
${G_myName} ${extraInfo} -i mailingNameGet                            # Look through preceding ".." and locate first mailingName
${G_myName} ${extraInfo} -i logsToNames                               # Based on mailingNameGet
${G_myName} ${extraInfo} -i distNextBatch                             # After distNamesGenWith + logsToNames = namesResultFor dist
${G_myName} ${extraInfo} -i distPrepWith vis_examplesAndTests         # distNamesOutputWith + logsToNames + distNextBatch 
${G_myName} ${extraInfo} -i distPrepWith vis_examplesAndTests         # = namesOutputToFilesWithAndResult dist vis_examplesAndTests
${G_myName} ${extraInfo} -i bbdbNamesInput  ./dist-result.names       # Visit File and run bbdb-names-input -- after (server-start)


** How do I create a new Distribution?

***    1) Go To A Mailings Base 
       [[elisp:(lsip-local-run-command "echo pushd ~/BUE/mailings/SPECIFY")][echo pushd ~/BUE/mailings/SPECIFY]]

***    2) Create the Distribution's Base
****      mkdir -p ~/BUE/mailings/someMailing/dists/distName
****      pushd  ~/BUE/mailings/someMailing/dists/distName
****      bystarNameStart.sh -i startObjectGen distribution path

** Distribution Prepapration / Processing

***   distPrep
****    Prepares a particular mailing for distribution. It does the following sequence:
****	    1) distNamesGen
	    ****	    2) logsToNames
****	    3) distNextBatch
	       
***   distNamesGen
****	  <iv_distGenNames>-include.names and <iv_distGenNames>-exclude.names

***   logsToNames
          no args, discovers who has already received the contents
	  so that nobody receives the same content twice.
	  The log is in the Logs directory

***   distNextBatch
          no args, creates a list of names of "Who-to-Send-to-Next".
	  This option basically compare the <iv_distGenNames>-include.names
	  (which are generated by distNamesGen option) with the
	  logs file and the  specials-include.names.
          It creates nextBatch-dist.names.
	  The output then can be used to start the next distribution.

** How do I execute a MailingsDistribution?

    1) bbdbMailings.sh ....

      bbdbMailings.sh  ${extraInfo} -p loadItemsFile=${oneItem} -s ${oneSubject} -a distPrep


    2) Visit nextBatch-dist.names

    3) M-x bbdb-names-input 

    4) In the bbdb buffer
         *
	 x
         mbatch-xxx-document

** How do I add a person\'s name for future distribution?

    1) If the person is not in bbdb, add the person to bbdb.

    2) If the person is in bbdb, verify that the person is not 
       already subject to distribution. Grep the guy\'s name in
       the Logs directory.

    3) Given the guy\'s bbdb entry, 
       x 
       names-new-append
       (default is newFolks.names)

    4) Send out 
       x
       msend-nedaOffice-AddedToList-Leap

       Customize as needed.
       
    5) Execute initial catch up distributions.

** How do I add new names to a distribution which is in progress?

    0) Create a freshFolks.names

    1) Run -a distGen  newNames

    2) Visit nextBatch

    3) M-x bbdb-group-input

    4) M-x mbatch-xxx-document

    5) When caught up, include newNames in the right places.

** How do I clean-up after bounces in distributions?

    - Edit the bbdb entry and remove the bad email address.

    - Add that name to /usr/devenv/bbdbNames/Names/excludeBounce.names

####+BEGIN: blee:bxPanel:foldingSection :outLevel 1 :sep t :title "Pre-2000 - OBSOLETED -- BBDB Mailings Activities" :anchor "" :extraInfo "(How Tos)"
* /[[elisp:(beginning-of-buffer)][|^]]  [[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]] [[elisp:(delete-other-windows)][|1]]/ 
* [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_       [[elisp:(org-cycle)][| *Pre-2000 - OBSOLETED -- BBDB Mailings Activities:* |]]  (How Tos)  [[elisp:(org-shifttab)][<)]] E|
####+END
** 
** How do I create a one time generic mailing  Mailing (no attachment - standalone)?

    -) cd /usr/devenv/bbdbNames/MailingsKeep/this/Generic/standalone/

    -) Edit Generic-note.preface

    -) Edit Generic-note.subject

    -) Set iv_contentDistTag="JUG" 
       Where JUG is something that 
       represents this distribution.

    -) bbdbMailings.sh -v -n showRun -p loadItemsFile=this -s this_Generic_note -a distKeepGen

    -) Set iv_distGenNames="distBigLeap" 
       whish is a the desired distribution.

    -) bbdbMailings.sh -v -n showRun -p loadItemsFile=this -s this_Generic_note -a distPrep

    -) Bring up the target distribution in BBDB

    -) In BBDB buffer, on the item "x" with msend-this-Generic-note

    -) Pass it through CVS

** How do I create a new Mailing (no attachment - standalone)?

    1) Edit bbdbContentItems.xxx   in /usr/devenv/bbdbNames/bin

    2) bbdbMailings.sh ... -a mailingsKeepGen
   [[elisp:(lsip-local-run-command "pushd /usr/devenv/bbdbNames/bin")][pushd /usr/devenv/bbdbNames/bin]]
   [[elisp:(lsip-local-run-command "echo bbdbMailings.sh -v -n showRun -p loadItemsFile=iran -s iran_bystar_ecosystemRevCollaborate -a mailingsKeepGen")][bbdbMailings.sh -v -n showRun -p loadItemsFile=iran -s iran_bystar_ecosystemRevCollaborate -a mailingsKeepGen]]

    3) Go in mailingsKeep and create .preface .from files

    4) bbdbMailings.sh ... -a mailingsGen
   [[elisp:(lsip-local-run-command "pushd /usr/devenv/bbdbNames/bin")][pushd /usr/devenv/bbdbNames/bin]]
   [[elisp:(lsip-local-run-command "echo bbdbMailings.sh -v -n showRun -p loadItemsFile=iran -s iran_bystar_ecosystemRevCollaborate -a mailingsGen")][bbdbMailings.sh -v -n showRun -p loadItemsFile=iran -s iran_bystar_ecosystemRevCollaborate -a mailingsGen]]

    5) M-x [[elisp:(load-file "/usr/devenv/bbdbNames/MailingsGened/msend-contents-load.el")][load-file bbdb-contents-load.el]]


    6) In BBDB buffer, on the item "x" with msend-xxx

    7) Tag the item files the desired distribution
    
    8) Run the distribution

    9) Pass it through CVS

** How do I create a new Mailing with documents?

    1) Edit ./bbdbContentItems.xxx to add new
       item.  The major important inputs for
       including documents in your mailings are:

       iv_contentType="doc"
       iv_content_containerList=("validContainerName") -- just for example use
       iv_content_pkgRef=("validPkgName") -- just for example use

       The iv_content_containerList indicates which
       container list will be loaded during bbdbMailings.sh
       execution and the iv_content_pkgRef indicates a
       particular item from that container.

    2) Edit the indicated container list (if one exist)
       or create a new file for it.  The place for
       this container is in /opt/public/osmt/siteControl/nedaPlus
       For example: edit mmaCntntPkgItems.validContainerName and
       add these 2 entries:
         - item_cntntPkg_validPkgName
	 - item_access_validPkgName
       (see example from other mmaCntntPkgItems file)

    3) Run mmaCntntPkgs.sh -p pkgFamily=validContainerName -s cntntPkg_validPkgName -a obtain

    4-) bbdbMailings.sh ... -a mailingsKeepGen
        Then go into the appropriate directory and 
        add relevant preface.

    4) bbdbMailings.sh ... -a mailingsGen

    5) M-x load-file bbdb-contents-load.el

    6) In BBDB buffer, on the item "x" with msend-xxx

    7) Tag the item files the desired distribution
    
    8) Run the distribution

    9) Pass it through CVS

** How do I add a new preface for same doc Mailing?

     Just reproduce the item file for the document and name it something else.

** How  do ditributions work?

*** DISTRIBUTION CREATION

       distKeepGen
          no args, create a DistKeep directory (if it doesn't exist)
	  and then create this hierarchy directory (if it doesn't exist)
	  iv_contentCategory/iv_contentName/iv_contentDistTag.
	  In each of these directory, it look for 
	  special-exclude.names and special-include.names files.
	  If they don't exist, it will touch
	  special-exclude.names and special-include.names.

   [[elisp:(lsip-local-run-command "pushd /usr/devenv/bbdbNames/bin")][pushd /usr/devenv/bbdbNames/bin]]
   [[elisp:(lsip-local-run-command "echo bbdbMailings.sh -v -n showRun -p loadItemsFile=iran -s iran_bystar_persianInputMethods -a distKeepGen")][bbdbMailings.sh -v -n showRun -p loadItemsFile=iran -s iran_bystar_persianInputMethods -a distKeepGen]]


DISTRIBUTION PROCESSING
=======================

       distPrep  -- distPrepWith vis_distHereNames 
          Prepares a particular mailing for distribution.
	  It does the following sequence:
	    1) distNamesGen
	    2) logsToNames
	    3) distNextBatch
	       
       distNamesGen
          Runs iv_namesGenCommand (eg nedaNamesGen.sh)
          no args, based on iv_distGenNames.  This option will create
	  a list of names of "Who-to-Send-to".  It creates
	  <iv_distGenNames>-include.names and <iv_distGenNames>-exclude.names
	  in Distributions/<iv_contentCategory>/<iv_contentName>/<iv_contentDistTag>.

       logsToNames
          no args, discovers who has already received the contents
	  so that nobody receives the same content twice.
	  The log is in the Logs directory

       distNextBatch
          no args, creates a list of names of "Who-to-Send-to-Next".
	  This option basically compare the <iv_distGenNames>-include.names
	  (which are generated by distNamesGen option) with the
	  logs file and the  specials-include.names.
          It creates nextBatch-dist.names.
	  The output then can be used to start the next distribution.

** How do I setup a Custom Distribution?

    1) Make sure that in the itemFile 
           iv_distGenNames=""

    2) Run -a distKeepGen
    
    3) Edit the specials-include.names

** How do I setup a Named Distribution?

    1) Make sure that in the itemFile 
           iv_distGenNames="aLegitDistName"
	   see nedaNamesGen for the list
              nedaNamesGen.sh -i help

** How do I execute a MailingsDistribution?

    1) bbdbMailings.sh ....

      bbdbMailings.sh  ${extraInfo} -p loadItemsFile=${oneItem} -s ${oneSubject} -a distPrep


    2) Visit nextBatch-dist.names

    3) M-x bbdb-names-input 

    4) In the bbdb buffer
         *
	 x
         mbatch-xxx-document

** How do I add a person\'s name for future distribution?

    1) If the person is not in bbdb, add the person to bbdb.

    2) If the person is in bbdb, verify that the person is not 
       already subject to distribution. Grep the guy\'s name in
       the Logs directory.

    3) Given the guy\'s bbdb entry, 
       x 
       names-new-append
       (default is newFolks.names)

    4) Send out 
       x
       msend-nedaOffice-AddedToList-Leap

       Customize as needed.
       
    5) Execute initial catch up distributions.

** How do I add new names to a distribution which is in progress?

    0) Create a freshFolks.names

    1) Run -a distGen  newNames

    2) Visit nextBatch

    3) M-x bbdb-group-input

    4) M-x mbatch-xxx-document

    5) When caught up, include newNames in the right places.

** How do I clean-up after bounces in distributions?

    - Edit the bbdb entry and remove the bad email address.

    - Add that name to /usr/devenv/bbdbNames/Names/excludeBounce.names
####+BEGIN: blee:bxPanel:separator :outLevel 1
* /[[elisp:(beginning-of-buffer)][|^]] [[elisp:(blee:menu-sel:navigation:popupMenu)][==]] [[elisp:(delete-other-windows)][|1]]/
####+END
####+BEGIN: blee:bxPanel:evolution
* [[elisp:(show-all)][(>]] [[elisp:(describe-function 'org-dblock-write:blee:bxPanel:evolution)][dbf]]
*                                   _━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━_
* [[elisp:(show-all)][|n]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_     [[elisp:(org-cycle)][| *Maintenance:* | ]]  [[elisp:(blee:menu-sel:agenda:popupMenu)][||Agenda]]  <<Evolution>>  [[elisp:(org-shifttab)][<)]] E|
####+END
####+BEGIN: blee:bxPanel:foldingSection :outLevel 2 :title "Notes, Ideas, Tasks, Agenda" :anchor "Tasks"
** [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_       [[elisp:(org-cycle)][| /Notes, Ideas, Tasks, Agenda:/ |]] <<Tasks>>   [[elisp:(org-shifttab)][<)]] E|
####+END
*** TODO Some Idea
####+BEGIN: blee:bxPanel:evolutionMaintainers
** [[elisp:(show-all)][(>]] [[elisp:(describe-function 'org-dblock-write:blee:bxPanel:evolutionMaintainers)][dbf]]
** [[elisp:(show-all)][|n]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_       [[elisp:(org-cycle)][| /Bug Reports, Development Team:/ | ]]  <<Maintainers>>  
***  Problem Report                       ::   [[elisp:(find-file "")][Send debbug Email]]
***  Maintainers                          ::   [[bbdb:Mohsen.*Banan]]  :: http://mohsen.1.banan.byname.net  E|
####+END
* B|
####+BEGIN: blee:bxPanel:footerPanelControls
* [[elisp:(show-all)][(>]] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 
* /Footer Controls/ ::  [[elisp:(blee:bnsm:menu-back)][Back]]  [[elisp:(toggle-read-only)][toggle-read-only]]  [[elisp:(show-all)][Show-All]]  [[elisp:(org-shifttab)][Cycle Glob Vis]]  [[elisp:(delete-other-windows)][1 Win]]  [[elisp:(save-buffer)][Save]]   [[elisp:(kill-buffer)][Quit]]  [[elisp:(org-shifttab)][<)]] E|
####+END
####+BEGIN: blee:bxPanel:footerOrgParams
* [[elisp:(show-all)][(>]] [[elisp:(describe-function 'org-dblock-write:blee:bxPanel:footerOrgParams)][dbf]]
* [[elisp:(show-all)][|n]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_     [[elisp:(org-cycle)][| *= Org-Mode Local Params: =* | ]]
#+STARTUP: overview
#+STARTUP: lognotestate
#+STARTUP: inlineimages
#+SEQ_TODO: TODO WAITING DELEGATED | DONE DEFERRED CANCELLED
#+TAGS: @desk(d) @home(h) @work(w) @withInternet(i) @road(r) call(c) errand(e)
#+CATEGORY: N:mcdt-usage
####+END
####+BEGIN: blee:bxPanel:footerEmacsParams :primMode "org-mode"
* [[elisp:(show-all)][(>]] [[elisp:(describe-function 'org-dblock-write:blee:bxPanel:footerEmacsParams)][dbf]]
* [[elisp:(show-all)][|n]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_     [[elisp:(org-cycle)][| *= Emacs Local Params: =* | ]]
# Local Variables:
# eval: (setq-local ~selectedSubject "noSubject")
# eval: (setq-local ~primaryMajorMode 'org-mode)
# eval: (setq-local ~blee:panelUpdater nil)
# eval: (setq-local ~blee:dblockEnabler nil)
# eval: (setq-local ~blee:dblockController "interactive")
# eval: (img-link-overlays)
# eval: (set-fill-column 115)
# eval: (blee:fill-column-indicator/enable)
# eval: (bx:load-file:ifOneExists "./panelActions.el")
# End:

####+END
